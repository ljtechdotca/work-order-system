generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
  access_token       String?
  expires_at         Int?
  id_token           String?
  oauth_token        String?
  oauth_token_secret String?
  provider           String
  providerAccountId  String
  refresh_token      String?
  scope              String?
  session_state      String?
  token_type         String?
  type               String
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId             String

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  expires      DateTime
  sessionToken String   @unique
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
}

model User {
  id            String    @id @default(dbgenerated()) @map("_id") @db.ObjectId
  accounts      Account[]
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  name          String?
  sessions      Session[]
  Order         Order[]
}

model VerificationToken {
  id         String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  expires    DateTime
  identifier String
  token      String   @unique

  @@unique([identifier, token])
}

model Order {
  id          String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  description String
  tag         String
  title       String
  updatedAt   DateTime @updatedAt
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
}
